/*
 * Payments API inbound
 * The Payments API enables you to do a custom integration with Peach Payments and thereby support multiple payment methods.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@peachpayments.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CheckoutV2;
import com.konfigthis.client.model.CheckoutV2Billing;
import com.konfigthis.client.model.CheckoutV2Customer;
import com.konfigthis.client.model.CheckoutV2GenerationInitiateCheckoutInstanceResponse;
import com.konfigthis.client.model.CheckoutV2Shipping;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CheckoutV2GenerationApi
 */
@Disabled
public class CheckoutV2GenerationApiTest {

    private static CheckoutV2GenerationApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CheckoutV2GenerationApi(apiClient);
    }

    /**
     * Initiate Checkout
     *
     * Create a checkout instance for use from Embedded Checkout.  For more information, see the [documentation](https://developer.peachpayments.com/docs/checkout-embedded-tutorial#tutorial).  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void initiateCheckoutInstanceTest() throws ApiException {
        String authenticationEntityId = null;
        String merchantTransactionId = null;
        Double amount = null;
        String currency = null;
        String nonce = null;
        String shopperResultUrl = null;
        String referer = null;
        String defaultPaymentMethod = null;
        Boolean forceDefaultMethod = null;
        String merchantInvoiceId = null;
        String cancelUrl = null;
        String notificationUrl = null;
        Map<String, String> customParameters = null;
        CheckoutV2Customer customer = null;
        CheckoutV2Billing billing = null;
        CheckoutV2Shipping shipping = null;
        Boolean createRegistration = null;
        String originator = null;
        String returnTo = null;
        CheckoutV2GenerationInitiateCheckoutInstanceResponse response = api.initiateCheckoutInstance(authenticationEntityId, merchantTransactionId, amount, currency, nonce, shopperResultUrl, referer)
                .defaultPaymentMethod(defaultPaymentMethod)
                .forceDefaultMethod(forceDefaultMethod)
                .merchantInvoiceId(merchantInvoiceId)
                .cancelUrl(cancelUrl)
                .notificationUrl(notificationUrl)
                .customParameters(customParameters)
                .customer(customer)
                .billing(billing)
                .shipping(shipping)
                .createRegistration(createRegistration)
                .originator(originator)
                .returnTo(returnTo)
                .execute();
        // TODO: test validations
    }

}
