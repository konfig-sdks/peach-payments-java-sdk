/*
 * Payments API inbound
 * The Payments API enables you to do a custom integration with Peach Payments and thereby support multiple payment methods.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@peachpayments.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.io.File;
import com.konfigthis.client.model.FilesUploadFileRequest;
import com.konfigthis.client.model.FilesUploadFileResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FilesApi
 */
@Disabled
public class FilesApiTest {

    private static FilesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new FilesApi(apiClient);
    }

    /**
     * Download a file
     *
     * Downloads a file that was attached to a payment link.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadFileTest() throws ApiException {
        String paymentId = null;
        String fileId = null;
        api.downloadFile(paymentId, fileId)
                .execute();
        // TODO: test validations
    }

    /**
     * Upload a file
     *
     * Upload a file so that it can be attached to a payment link. Only PDFs smaller than 5 MB are supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadFileTest() throws ApiException {
        File _file = null;
        FilesUploadFileResponse response = api.uploadFile()
                ._file(_file)
                .execute();
        // TODO: test validations
    }

}
