/*
 * Payments API inbound
 * The Payments API enables you to do a custom integration with Peach Payments and thereby support multiple payment methods.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@peachpayments.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Address;
import com.konfigthis.client.model.Authentication;
import com.konfigthis.client.model.Cart;
import com.konfigthis.client.model.Customer;
import com.konfigthis.client.model.PaymentBrand;
import com.konfigthis.client.model.PaymentType;
import com.konfigthis.client.model.Shopify;
import com.konfigthis.client.model.VirtualAccount;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PaymentRequest
 */
public class PaymentRequestTest {
    private final PaymentRequest model = new PaymentRequest();

    /**
     * Model tests for PaymentRequest
     */
    @Test
    public void testPaymentRequest() {
        // TODO: test PaymentRequest
    }

    /**
     * Test the property 'authentication'
     */
    @Test
    public void authenticationTest() {
        // TODO: test authentication
    }

    /**
     * Test the property 'merchantTransactionId'
     */
    @Test
    public void merchantTransactionIdTest() {
        // TODO: test merchantTransactionId
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'paymentBrand'
     */
    @Test
    public void paymentBrandTest() {
        // TODO: test paymentBrand
    }

    /**
     * Test the property 'paymentType'
     */
    @Test
    public void paymentTypeTest() {
        // TODO: test paymentType
    }

    /**
     * Test the property 'virtualAccount'
     */
    @Test
    public void virtualAccountTest() {
        // TODO: test virtualAccount
    }

    /**
     * Test the property 'shipping'
     */
    @Test
    public void shippingTest() {
        // TODO: test shipping
    }

    /**
     * Test the property 'billing'
     */
    @Test
    public void billingTest() {
        // TODO: test billing
    }

    /**
     * Test the property 'shopify'
     */
    @Test
    public void shopifyTest() {
        // TODO: test shopify
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'cart'
     */
    @Test
    public void cartTest() {
        // TODO: test cart
    }

    /**
     * Test the property 'merchantInvoiceId'
     */
    @Test
    public void merchantInvoiceIdTest() {
        // TODO: test merchantInvoiceId
    }

    /**
     * Test the property 'shopperResultUrl'
     */
    @Test
    public void shopperResultUrlTest() {
        // TODO: test shopperResultUrl
    }

}
