/*
 * Payments API inbound
 * The Payments API enables you to do a custom integration with Peach Payments and thereby support multiple payment methods.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@peachpayments.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CheckoutV2Billing;
import com.konfigthis.client.model.CheckoutV2Customer;
import com.konfigthis.client.model.CheckoutV2Shipping;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CheckoutV2
 */
public class CheckoutV2Test {
    private final CheckoutV2 model = new CheckoutV2();

    /**
     * Model tests for CheckoutV2
     */
    @Test
    public void testCheckoutV2() {
        // TODO: test CheckoutV2
    }

    /**
     * Test the property 'authenticationEntityId'
     */
    @Test
    public void authenticationEntityIdTest() {
        // TODO: test authenticationEntityId
    }

    /**
     * Test the property 'merchantTransactionId'
     */
    @Test
    public void merchantTransactionIdTest() {
        // TODO: test merchantTransactionId
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'nonce'
     */
    @Test
    public void nonceTest() {
        // TODO: test nonce
    }

    /**
     * Test the property 'shopperResultUrl'
     */
    @Test
    public void shopperResultUrlTest() {
        // TODO: test shopperResultUrl
    }

    /**
     * Test the property 'defaultPaymentMethod'
     */
    @Test
    public void defaultPaymentMethodTest() {
        // TODO: test defaultPaymentMethod
    }

    /**
     * Test the property 'forceDefaultMethod'
     */
    @Test
    public void forceDefaultMethodTest() {
        // TODO: test forceDefaultMethod
    }

    /**
     * Test the property 'merchantInvoiceId'
     */
    @Test
    public void merchantInvoiceIdTest() {
        // TODO: test merchantInvoiceId
    }

    /**
     * Test the property 'cancelUrl'
     */
    @Test
    public void cancelUrlTest() {
        // TODO: test cancelUrl
    }

    /**
     * Test the property 'notificationUrl'
     */
    @Test
    public void notificationUrlTest() {
        // TODO: test notificationUrl
    }

    /**
     * Test the property 'customParameters'
     */
    @Test
    public void customParametersTest() {
        // TODO: test customParameters
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'billing'
     */
    @Test
    public void billingTest() {
        // TODO: test billing
    }

    /**
     * Test the property 'shipping'
     */
    @Test
    public void shippingTest() {
        // TODO: test shipping
    }

    /**
     * Test the property 'createRegistration'
     */
    @Test
    public void createRegistrationTest() {
        // TODO: test createRegistration
    }

    /**
     * Test the property 'originator'
     */
    @Test
    public void originatorTest() {
        // TODO: test originator
    }

    /**
     * Test the property 'returnTo'
     */
    @Test
    public void returnToTest() {
        // TODO: test returnTo
    }

}
