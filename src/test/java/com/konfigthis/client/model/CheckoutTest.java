/*
 * Payments API inbound
 * The Payments API enables you to do a custom integration with Peach Payments and thereby support multiple payment methods.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@peachpayments.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for Checkout
 */
public class CheckoutTest {
    private final Checkout model = new Checkout();

    /**
     * Model tests for Checkout
     */
    @Test
    public void testCheckout() {
        // TODO: test Checkout
    }

    /**
     * Test the property 'authenticationEntityId'
     */
    @Test
    public void authenticationEntityIdTest() {
        // TODO: test authenticationEntityId
    }

    /**
     * Test the property 'signature'
     */
    @Test
    public void signatureTest() {
        // TODO: test signature
    }

    /**
     * Test the property 'merchantTransactionId'
     */
    @Test
    public void merchantTransactionIdTest() {
        // TODO: test merchantTransactionId
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'paymentType'
     */
    @Test
    public void paymentTypeTest() {
        // TODO: test paymentType
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'nonce'
     */
    @Test
    public void nonceTest() {
        // TODO: test nonce
    }

    /**
     * Test the property 'shopperResultUrl'
     */
    @Test
    public void shopperResultUrlTest() {
        // TODO: test shopperResultUrl
    }

    /**
     * Test the property 'defaultPaymentMethod'
     */
    @Test
    public void defaultPaymentMethodTest() {
        // TODO: test defaultPaymentMethod
    }

    /**
     * Test the property 'forceDefaultMethod'
     */
    @Test
    public void forceDefaultMethodTest() {
        // TODO: test forceDefaultMethod
    }

    /**
     * Test the property 'merchantInvoiceId'
     */
    @Test
    public void merchantInvoiceIdTest() {
        // TODO: test merchantInvoiceId
    }

    /**
     * Test the property 'cancelUrl'
     */
    @Test
    public void cancelUrlTest() {
        // TODO: test cancelUrl
    }

    /**
     * Test the property 'notificationUrl'
     */
    @Test
    public void notificationUrlTest() {
        // TODO: test notificationUrl
    }

    /**
     * Test the property 'customParametersName'
     */
    @Test
    public void customParametersNameTest() {
        // TODO: test customParametersName
    }

    /**
     * Test the property 'customerMerchantCustomerId'
     */
    @Test
    public void customerMerchantCustomerIdTest() {
        // TODO: test customerMerchantCustomerId
    }

    /**
     * Test the property 'customerGivenName'
     */
    @Test
    public void customerGivenNameTest() {
        // TODO: test customerGivenName
    }

    /**
     * Test the property 'customerSurname'
     */
    @Test
    public void customerSurnameTest() {
        // TODO: test customerSurname
    }

    /**
     * Test the property 'customerMobile'
     */
    @Test
    public void customerMobileTest() {
        // TODO: test customerMobile
    }

    /**
     * Test the property 'customerEmail'
     */
    @Test
    public void customerEmailTest() {
        // TODO: test customerEmail
    }

    /**
     * Test the property 'customerStatus'
     */
    @Test
    public void customerStatusTest() {
        // TODO: test customerStatus
    }

    /**
     * Test the property 'customerBirthDate'
     */
    @Test
    public void customerBirthDateTest() {
        // TODO: test customerBirthDate
    }

    /**
     * Test the property 'customerIp'
     */
    @Test
    public void customerIpTest() {
        // TODO: test customerIp
    }

    /**
     * Test the property 'customerPhone'
     */
    @Test
    public void customerPhoneTest() {
        // TODO: test customerPhone
    }

    /**
     * Test the property 'customerIdNumber'
     */
    @Test
    public void customerIdNumberTest() {
        // TODO: test customerIdNumber
    }

    /**
     * Test the property 'billingStreet1'
     */
    @Test
    public void billingStreet1Test() {
        // TODO: test billingStreet1
    }

    /**
     * Test the property 'billingStreet2'
     */
    @Test
    public void billingStreet2Test() {
        // TODO: test billingStreet2
    }

    /**
     * Test the property 'billingCity'
     */
    @Test
    public void billingCityTest() {
        // TODO: test billingCity
    }

    /**
     * Test the property 'billingCompany'
     */
    @Test
    public void billingCompanyTest() {
        // TODO: test billingCompany
    }

    /**
     * Test the property 'billingCountry'
     */
    @Test
    public void billingCountryTest() {
        // TODO: test billingCountry
    }

    /**
     * Test the property 'billingState'
     */
    @Test
    public void billingStateTest() {
        // TODO: test billingState
    }

    /**
     * Test the property 'billingPostcode'
     */
    @Test
    public void billingPostcodeTest() {
        // TODO: test billingPostcode
    }

    /**
     * Test the property 'shippingStreet1'
     */
    @Test
    public void shippingStreet1Test() {
        // TODO: test shippingStreet1
    }

    /**
     * Test the property 'shippingStreet2'
     */
    @Test
    public void shippingStreet2Test() {
        // TODO: test shippingStreet2
    }

    /**
     * Test the property 'shippingCity'
     */
    @Test
    public void shippingCityTest() {
        // TODO: test shippingCity
    }

    /**
     * Test the property 'shippingCompany'
     */
    @Test
    public void shippingCompanyTest() {
        // TODO: test shippingCompany
    }

    /**
     * Test the property 'shippingPostcode'
     */
    @Test
    public void shippingPostcodeTest() {
        // TODO: test shippingPostcode
    }

    /**
     * Test the property 'shippingCountry'
     */
    @Test
    public void shippingCountryTest() {
        // TODO: test shippingCountry
    }

    /**
     * Test the property 'shippingState'
     */
    @Test
    public void shippingStateTest() {
        // TODO: test shippingState
    }

    /**
     * Test the property 'cartTax'
     */
    @Test
    public void cartTaxTest() {
        // TODO: test cartTax
    }

    /**
     * Test the property 'cartShippingAmount'
     */
    @Test
    public void cartShippingAmountTest() {
        // TODO: test cartShippingAmount
    }

    /**
     * Test the property 'cartDiscount'
     */
    @Test
    public void cartDiscountTest() {
        // TODO: test cartDiscount
    }

    /**
     * Test the property 'createRegistration'
     */
    @Test
    public void createRegistrationTest() {
        // TODO: test createRegistration
    }

    /**
     * Test the property 'originator'
     */
    @Test
    public void originatorTest() {
        // TODO: test originator
    }

    /**
     * Test the property 'returnTo'
     */
    @Test
    public void returnToTest() {
        // TODO: test returnTo
    }

}
